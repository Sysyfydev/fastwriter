#ifndef RESOURCEMANAGER_H
#define RESOURCEMANAGER_H

////////////////////////////////////////////////////////////
/// \brief Inclusiones internas
///
////////////////////////////////////////////////////////////
#include "ResourceHolder.h"

////////////////////////////////////////////////////////////
/// \brief Declaraciones fordward
///
////////////////////////////////////////////////////////////
namespace sf
{
    class Texture;
}

////////////////////////////////////////////////////////////
/// \brief Contenedor de los recursos necesarios por la aplicacion
///
////////////////////////////////////////////////////////////
class ResourceManager
{
public:

    ////////////////////////////////////////////////////////////
    /// \brief Identificardores de texturas
    ///
    ////////////////////////////////////////////////////////////
    enum class TextureId
    {
        ConcreteTexture1, ///< Id de la textura ejemplo 1
        ConcreteTexture2, ///< Id de la textura ejemplo 2
    };

    ////////////////////////////////////////////////////////////
    /// \brief Carga e inicializa los recursos y los relaciona con un id
    ///
    ////////////////////////////////////////////////////////////
    ResourceManager();

    ////////////////////////////////////////////////////////////
    /// \brief Obtiene una referencia a la textura que concuerde con el id
    /// \param textureId Identificador de la textura
    /// \return Referencia la textura
    ///
    ////////////////////////////////////////////////////////////
    sf::Texture& getTexture(const TextureId& textureId);

private:
    ResourceHolder<TextureId, sf::Texture> textureHolder; ///< Contenedor de texturas
};

#endif // RESOURCEMANAGER_H
